workflow:
  rules:
    - if: $CI_COMMIT_TITLE =~ /\[no-ci\]/
      when: never
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_MERGE_REQUEST_SOURCE_PROJECT_ID && $CI_MERGE_REQUEST_SOURCE_PROJECT_ID != $CI_PROJECT_ID && $CI_JOB_MANUAL != "true"
      when: never

    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_REF_NAME =~ /(\.x\.x|main|master|develop|^ci-)/
    - if: $CI_COMMIT_TAG != null

stages:
  - test

test:
  image: "python:3.10-buster"

  stage: test

  services:
    - name: mariadb:10.6
      command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci', '--character-set-client-handshake=FALSE', '--innodb_read_only_compressed=OFF']
      alias: db
    - name: redis
      alias: redis_queue
    - name: redis
      alias: redis_cache
    - name: redis
      alias: redis_socketio

  variables:
    MYSQL_DATABASE: "test_dodock"
    MYSQL_ROOT_PASSWORD: "test_dodock"

  before_script:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-suggests --no-install-recommends mariadb-client xfonts-75dpi xfonts-base redis-server
    - export LANG=C.UTF-8
    - export LC_ALL=C.UTF-8
    - export LANGUAGE=en_US.UTF-8
    - wget -q https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.buster_amd64.deb
    - dpkg -i wkhtmltox_0.12.6-1.buster_amd64.deb && rm wkhtmltox_0.12.6-1.buster_amd64.deb
    - rm -rf /var/lib/apt/lists/*
    - rm -rf /etc/apt/sources.list.d/*
    - curl -sL https://deb.nodesource.com/setup_18.x | bash
    - apt-get install -y nodejs
    - npm install --global yarn
    - export PATH=$PATH:/home/dokotest/.local/bin
    - adduser --disabled-password --gecos "" dokotest
    - usermod -aG sudo dokotest
    - echo 'dokotest ALL=(ALL)  NOPASSWD:ALL' >> /etc/sudoers

  script:
    - su -c "pip install ." dokotest
    - bench-set-base-config() { su -c "cd $BENCH && bench config set-common-config -c redis_queue redis://redis_queue:6379 -c redis_cache redis://redis_cache:6379 -c redis_socketio redis://redis_socketio:6379 -c root_password $MYSQL_ROOT_PASSWORD -c db_host db -c db_port 3306 -c db_type mariadb -c admin_password admin" dokotest; }

    # https://doc.dokos.io/dodock/installation/manuelle
    - export BENCH="/home/dokotest/bench1"
    - su -c "bench init $BENCH --no-backups --version develop --install-app dokos --install-app hrms" dokotest
    - bench-set-base-config
    - su -c "cd $BENCH && (bench start > bench_start.log) &" dokotest
    - su -c "cd $BENCH && bench new-site test.local --set-default --install-app dokos --install-app hrms" dokotest
    - su -c "cd $BENCH && bench build --app frappe" dokotest
    - su -c "cd $BENCH && bench build --app payments" dokotest
    - su -c "cd $BENCH && bench build --app hrms" dokotest
    - su -c "cd $BENCH && bench build --app erpnext" dokotest
    - tail -n 10 $BENCH/bench_start.log

    - export BENCH="/home/dokotest/bench2"
    - su -c "bench init $BENCH --no-backups --version v3.x.x-hotfix --install-app dokos" dokotest
    - bench-set-base-config
    - su -c "cd $BENCH && (bench start > bench_start.log) &" dokotest
    - su -c "cd $BENCH && bench new-site test.local --set-default --install-app dokos" dokotest
    - ls $BENCH/sites/assets/frappe/dist/js/desk.bundle.*.js
    - ls $BENCH/sites/assets/frappe/dist/css/desk.bundle.*.css
    - ls $BENCH/sites/assets/erpnext/dist/css/erpnext.bundle.*.css
    - ls $BENCH/sites/assets/erpnext/dist/js/erpnext.bundle.*.js
    - tail -n 10 $BENCH/bench_start.log
